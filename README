sgensys is the Sound GENeration SYStem, a sound synthesis program developed
for musical purposes; it will read a script file of its SGS (Sound Generation
Script) format and produce audio output; once more developed writing to audio
files will be implemented.

Script syntax:

Whitespace is not allowed within names that come after the initial letter of
an operation, such as sin, tri. Nor is it allowed within numbers. Apart from
this, spaces and tabs may be freely placed, or - not recommended - omitted.

Newlines terminate steps, though a new step will also terminate the previous
one allowing multiple steps on one line. In short, it is always possible to
remove newlines, but not to insert them anywhere.

< and > allow nesting of scope; the step prior to the < remains in scope
until new steps are given, and a newline or a > will return to the step for
which the < was given.

Parameters with nesting use { and } instead, differentiating the two, though
such nesting also allows newlines.

When a number is given for a parameter, specifying it within parentheses will
make the syntax freer, allowing arithmetic and further nesting of parentheses.
Whitespace including newlines may be freely placed until the final closing
parenthesis.

* Operations are specified followed by optional arguments for parameters.
* Arguments are given for an operation.
* Other kinds of modifiers exist that affect operations much like arguments,
  but may be more freely placed and do not belong to the present operation.

Operations will output audio at the same time unless wait times are involved.
Each delaying will delay (shift the time of) all future operations.

The following operations are supported:

S:
	Set defaults and parameter modifiers.
	f, r, t	Set default values for parameters f (default 100),
		r (default 1), t (default 1).
	a	Sets a multiplier for the amplitude for all non-modulator
		waves; effectively a volume control for the combined output.
	n	Sets A4 tuning (default 444) for notes specified with n.

Wsin, Wtri, Wsqr, Wsaw:
	Play sine, triangle, square or saw wave.
	Supports f, t, a, \ parameters.

The following parameters can be found in wave operations:
	t	Time duration in seconds. If no t setting given, or t*
		(blank time setting) is explicitly given, default time depends
		on context: For a composite step, the value of the previous
		part (default time if none) will be used for the new part;
		otherwise, if there are simultaneous operations it is fitted
		to the duration of their play; otherwise, the default value
                is used.
	f	Frequency in Hz.
	f!{}	Second frequency in Hz to modulate (FM) to by wave or envelope,
		and/or a list of modulators given within {} following the
		number if given.
	n	Frequency as note in justly intoned C-major scale; optional
		subnote (c, d, e, f, g, a or b) inside inner octave (between
		note and next note), then note (C, D, E, F, G, A or B), then
		optionally s (sharp) or f (flat), then optionally the octave
		of the note (0-10), default being 4.
	r	Frequency ratio (modulator waves only) of carrier to modulator.
		Keeps frequency that of the carrier divided by the given
		number. Often used in the form r(n/m) to give an n:m ratio.
	r!{}	Second frequency ratio (modulator waves only) to modulate (FM)
		to by wave or envelope, and/or a list of modulators given
		within {} following the number if given.
	a	Amplitude, where 1.0 gives a level of 0dB, which is the signal
		max of the output. For a modulator wave, this however simply
		adjusts the effect strength.
	a!{}	Second amplitude to modulate (AM) to by wave or envelope,
		and/or a list of modulators given within {} following the
		number if given.
	p	Set the beginning phase of the wave. For example, p(3/4) will
		make a sine or triangle wave begin at its "bottom". This is
		mostly used where wanted for waves used by f!/r! or a!.
	p!{}	A list of modulator (PM) waves is given within the {}, the
		per-sample sum of which is used to phase-modulate the carrier,
		be it the final carrier or in turn another modulator.
	s	Silent time at the beginning of the operation, time in seconds.
		Works like adding delay, except it only affects this operation.
	\	Delay current operation and all following ones, time in
		seconds.
	w	Set wave type (sin, tri, sqr, saw).

The following other modifiers are supported:
	/	Delay next operation and all following ones, time in seconds.
		Alternatively, /t will delay by the time of the previous
		operation.
	|	Add (independently of /) just enough delay to make the next
		operation(s) begin at the expiration of all that preceeds it,
		though / and \ may further delay it.

Compound steps:
	Writing a ";" (on new line or same line) after an operation will allow
	specifying new arguments to apply at the end of the previous duration;
	this can also be repeated.
		This is mostly syntactic sugar, making it possible to write a
	sequence of steps as a single "compound step", rather than having to
	(when other simultaneous operations are going on) intersperse them
	with a mixture of delay times and steps for those other simultaneous
	operations.

Labels and referencing:
	Any W operation may be prefixed by "'label " in order to define a
	label for it, where label is anything followed by whitespace;
	thereafter the label may be referenced as ":label", allowing future
	changes to an operation previously defined. For practical purposes,
	label referencing can be considered an operation, behaving the same.
