/* operator types */
enum {
  SGS_TYPE_TOP = 0,
  SGS_TYPE_NESTED,
};

/* operator parameters */
enum {
  SGS_VOICE = 1<<0,
  /* connection scheme (voice-operator and operator-operator linkage) */
  SGS_CNCSCH = 1<<1,
  /* operator values */
  SGS_WAVE = 1<<5,
  SGS_TIME = 1<<6,
  SGS_SILENCE = 1<<7,
  SGS_FREQ = 1<<8,
  SGS_VALITFREQ = 1<<9,
  SGS_DYNFREQ = 1<<10,
  SGS_PHASE = 1<<11,
  SGS_AMP = 1<<12,
  SGS_VALITAMP = 1<<13,
  SGS_DYNAMP = 1<<14,
  SGS_ATTR = 1<<15,
  /* top-operator-specific values */
  SGS_PANNING = 1<<16,
  SGS_VALITPANNING = 1<<17
};

/* operator wave types */
enum {
  SGS_WAVE_SIN = 0,
  SGS_WAVE_SRS,
  SGS_WAVE_TRI,
  SGS_WAVE_SQR,
  SGS_WAVE_SAW
};

/* operator atttributes */
enum {
  SGS_ATTR_FREQRATIO = 1<<1,
  SGS_ATTR_DYNFREQRATIO = 1<<2,
  SGS_ATTR_VALITFREQ = 1<<3,
  SGS_ATTR_VALITFREQRATIO = 1<<4,
  SGS_ATTR_VALITAMP = 1<<5,
  SGS_ATTR_VALITPANNING = 1<<6
};

/* value iteration types */
enum {
  SGS_VALIT_NONE = 0, /* when none given */
  SGS_VALIT_LIN,
  SGS_VALIT_EXP,
  SGS_VALIT_LOG
};

typedef struct SGSProgramOpAdjc {
  uchar pmodc;
  uchar fmodc;
  uchar amodc;
  int adjcs[1]; /* sized to total number */
} SGSProgramOpAdjc;

/* Connection scheme - a per-voice list of adjacent nodes for each node,
 * beginning with the voice itself. Swapping it out (on an event giving a
 * new) will reconfigure the operators for the voice. pmodc counter is
 * reused for number of operators per voice. Main index corresponds to
 * counter increased at each new subnode reached. */
typedef SGSProgramOpAdjc *SGSProgramCncSch;

typedef struct SGSProgramValit {
  int time_ms, pos_ms;
  float goal;
  uchar type;
} SGSProgramValit;

typedef struct SGSProgramEvent {
  /* event info: (-1 for blank id) */
  int opprevid, opnextid; /* previous & next event for same operator */
  uchar optype;
  uint opid; /* counts up from 0 separately for different optypes */
  uint parentid, topopid; /* top operator for operator set */
  int wait_ms;
  uint params;
  /* voice parameters possibly set: */
  uint voiceid;
  SGSProgramCncSch *cncsch;
  float panning;
  SGSProgramValit valitpanning;
  /* operator parameters possibly set: */
  uchar attr;
  uchar wave;
  int time_ms, silence_ms;
  float freq, dynfreq, phase, amp, dynamp;
  SGSProgramValit valitfreq, valitamp;
} SGSProgramEvent;

struct SGSProgram {
  SGSProgramEvent *events;
  uint eventc;
  uint operatorc,
       topopc; /* top-level operators */
};
